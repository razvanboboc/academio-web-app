@model Influencers.BusinessLogic.ViewModels.ArticleViewModels.ViewArticleViewModel
@using Influencers.BusinessLogic.DTOs;
@{
    ViewData["Title"] = "ViewArticle";
}

<script src="https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"></script>
<head>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.6.3/css/all.css" integrity="sha384-UHRtZLI+pbxtHCWp1t77Bi1L4ZtiqrqD80Kn4Z8NTSRyMA2Fd33n5dQ8lWUE00s/" crossorigin="anonymous">
    <link rel="stylesheet" href="~/css/homepage.css">
</head>

<div class="row">
    <div class="col-8">
        <div class="w-auto p-3 post-container2" style="background-color: #FCFCFC;">
            <div class="vote vote-container">
                <span id="article-up-@Model.Article.Id" class="up-vote" onclick="setValues(@Model.Article.Id, 1)"><i class="fas fa-angle-up"></i></span>
                <span id="article-counter-@Model.Article.Id" class="number">@Html.DisplayFor(model => Model.Article.Votes)</span>
                <span id="article-down-@Model.Article.Id" class="down-vote" onclick=" setValues(@Model.Article.Id, 2)"><i class="fas fa-angle-down"></i></span>
            </div>
            <div class="content" style=background-color: white;">
                <div class="posted">
                    Posted by @Html.DisplayFor(model => Model.Article.Author.Nickname) on @Html.DisplayFor(model => Model.Article.AddedTime)
                </div>
                <h3>
                    @Html.DisplayFor(model => Model.Article.Title)
                </h3>
                @if (Model.Article.ImageSource != null)
                {
                    <div class="d-flex justify-content-center">
                        <img src="~/ArticleImages/@Model.Article.ImageSource" style="max-width:100%; position:relative;" />
                    </div>

                }
                <p>
                    @Html.DisplayFor(model => Model.Article.Content)
                </p>

                @foreach (var tag in Model.Tags)
                {
                    <a href="@Url.Action("Index", "Article", new { flag = tag.Name })" class="badge badge-pill badge-primary">@tag.Name</a>
                }
                <br />
                <a asp-action="EditArticle" asp-controller="Article" asp-route-id="@Model.Article.Id">Edit</a>
            </div>
        </div>

        <br />

        <a class="btn btn-primary btn-lg btn-block" href='@Url.Action("AddComment", "Comment", new { articleId =  Model.Article.Id })'>
            Comment on this post
        </a>
        <br />
        <p class="align-content-lg-end" style="right:20px; font-size: 30px;">@Model.Comments.Count() comments</p>
        <hr />

        <div class="d-flex flex-column">
            @{
                showNestedComments(Model.Comments, null);
            }
        </div>

        @*@foreach (var comment in Model.Comments.Take(1))
            {
                <div class="d-flex flex-column">
                    <div class="comment-container">
                        <div class="vote vote-container">
                            <span id="comment-up-@comment.ParentComment.Id" class="up-vote" onclick="setCommentValues(@comment.ParentComment.Id, 1)"><i class="fas fa-angle-up"></i></span>
                            <span id="comment-counter-@comment.ParentComment.Id" class="number">@Html.DisplayFor(model => comment.ParentComment.Votes)</span>
                            <span id="comment-down-@comment.ParentComment.Id" class="down-vote" onclick=" setCommentValues(@comment.ParentComment.Id, 2)"><i class="fas fa-angle-down"></i></span>
                        </div>
                        <div class="content" style=background-color: white;">
                            <div class="posted">
                                Posted by @Html.DisplayFor(model => comment.ParentComment.Author.Nickname) on @Html.DisplayFor(model => comment.ParentComment.AddedTime);
                            </div>
                            <p>
                                @Html.DisplayFor(model => comment.ParentComment.Content)
                            </p>
                            <div>
                                <a href='@Url.Action("AddComment", "Comment", new { articleId =  Model.Article.Id, parentCommentId = comment.ParentComment.Id })'><i class='far fa-comment-alt' style='font-size:14px'></i> Reply</a>
                            </div>
                        </div>
                    </div>
                    <div class="d-flex flex-row">
                        <div style="width: 20px">hehe</div>
                        <div class="flex-fill comment-container">
                            <div class="vote vote-container">
                                <span id="comment-up-@comment.ParentComment.Id" class="up-vote" onclick="setCommentValues(@comment.ParentComment.Id, 1)"><i class="fas fa-angle-up"></i></span>
                                <span id="comment-counter-@comment.ParentComment.Id" class="number">@Html.DisplayFor(model => comment.ParentComment.Votes)</span>
                                <span id="comment-down-@comment.ParentComment.Id" class="down-vote" onclick=" setCommentValues(@comment.ParentComment.Id, 2)"><i class="fas fa-angle-down"></i></span>
                            </div>
                            <div class="content" style=background-color: white;">
                                <div class="posted">
                                    Posted by @Html.DisplayFor(model => comment.ParentComment.Author.Nickname) on @Html.DisplayFor(model => comment.ParentComment.AddedTime);
                                </div>
                                <p>
                                    @Html.DisplayFor(model => comment.ParentComment.Content)
                                </p>
                                <div>
                                    <a href='@Url.Action("AddComment", "Comment", new { articleId =  Model.Article.Id, parentCommentId = comment.ParentComment.Id })'><i class='far fa-comment-alt' style='font-size:14px'></i> Reply</a>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div>
                        <div style="width: 40px">hehe</div>
                        <div class="comment-container">
                            <div class="vote vote-container">
                                <span id="comment-up-@comment.ParentComment.Id" class="up-vote" onclick="setCommentValues(@comment.ParentComment.Id, 1)"><i class="fas fa-angle-up"></i></span>
                                <span id="comment-counter-@comment.ParentComment.Id" class="number">@Html.DisplayFor(model => comment.ParentComment.Votes)</span>
                                <span id="comment-down-@comment.ParentComment.Id" class="down-vote" onclick=" setCommentValues(@comment.ParentComment.Id, 2)"><i class="fas fa-angle-down"></i></span>
                            </div>
                            <div class="content" style=background-color: white;">
                                <div class="posted">
                                    Posted by @Html.DisplayFor(model => comment.ParentComment.Author.Nickname) on @Html.DisplayFor(model => comment.ParentComment.AddedTime);
                                </div>
                                <p>
                                    @Html.DisplayFor(model => comment.ParentComment.Content)
                                </p>
                                <div>
                                    <a href='@Url.Action("AddComment", "Comment", new { articleId =  Model.Article.Id, parentCommentId = comment.ParentComment.Id })'><i class='far fa-comment-alt' style='font-size:14px'></i> Reply</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }*@
    </div>
    <div class="col-4">
        <div class="w-auto p-3 sidebar-container container" style="background-color: #FCFCFC;">
            <div class="d-flex justify-content-center">
                <h2>Most used Tags</h2>
            </div>
            @if (Model.MostUsedTags != null)
            {
                var count = 1;
                <table class="table table-borderless table-sm">
                    <thead>
                        <tr>
                            <th scope="col"></th>
                            <th scope="col">Tag</th>
                            <th scope="col">Appearances</th>
                        </tr>
                    </thead>
                    @foreach (var tag in Model.MostUsedTags.Take(5))
                    {
                        <tbody>
                            <tr>
                                <th scope="row">@count.</th>
                                <td>
                                    <a href="@Url.Action("Index", "Article", new { flag = tag.Item1.Name })" class="badge badge-pill badge-primary">@tag.Item1.Name</a>
                                </td>
                                <td>
                                    <span>@tag.Item2</span>
                                </td>
                            </tr>
                        </tbody>
                        count++;
                    }
                </table>
            }
        </div>
    </div>
</div>

@functions {
    private void showNestedComments(IEnumerable<CommentDto> commentDtos, int? parentId)
    {
        @foreach (var comment in commentDtos)
        {
            @if (comment.Comment.ParentCommentId == parentId)
            {
                if (parentId != null)
                {
                    <div style="width:25px;"></div>
                }
                <div class="flex-fill comment-container">
                    <div class="vote vote-container">
                        <span id="comment-up-@comment.Comment.Id" class="up-vote" onclick="setCommentValues(@comment.Comment.Id, 1)"><i class="fas fa-angle-up"></i></span>
                        <span id="comment-counter-@comment.Comment.Id" class="number">@Html.DisplayFor(model => comment.Comment.Votes)</span>
                        <span id="comment-down-@comment.Comment.Id" class="down-vote" onclick=" setCommentValues(@comment.Comment.Id, 2)"><i class="fas fa-angle-down"></i></span>
                    </div>
                    <div class="content" style=background-color: white;">
                        <div class="posted">
                            Posted by @Html.DisplayFor(model => comment.Comment.Author.Nickname) on @Html.DisplayFor(model => comment.Comment.AddedTime);
                        </div>
                        <p>
                            @Html.DisplayFor(model => comment.Comment.Content)
                        </p>
                        <div>
                            <a href='@Url.Action("AddComment", "Comment", new { articleId =  Model.Article.Id, parentCommentId = comment.Comment.Id })'><i class='far fa-comment-alt' style='font-size:14px'></i> Reply</a>
                        </div>
                    </div>
                </div>
                if (comment.ChildComments.Count() != 0)
                {
                    showNestedComments(comment.ChildComments, comment.Comment.Id);
                }
            }
            }

        }
    }
}


@section scripts{

    <script>
        articleId = @Model.Article.Id;

        $(document).ready(colorArticleVotes(articleId));

        $(document).ready(function () {

            @foreach(var comment in Model.Comments)
            {

                @:if (Cookies.get(@comment.Comment.Id) == "1") {
                    @:$(`#comment-up-${@comment.Comment.Id}`).css("color", "#3CBC8D");
                    @:$(`#comment-down-${@comment.Comment.Id}`).css("color", "dimgray");
                @:}

                @:if (Cookies.get(@comment.Comment.Id) == "0") {
                    @:$(`#comment-up-${@comment.Comment.Id}`).css("color", "dimgray");
                    @:$(`#comment-down-${@comment.Comment.Id}`).css("color", "#3CBC8D");
                @:}

            }

        });
    </script>
}

